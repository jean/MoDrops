// Generating :before or :after pseudo-element shapes
@mixin p-el($el, $el-w: null, $el-h: null) {
  @if $el == "before" or $el == "after" { 
    &:#{$el} {
      @extend %pseudos;
      width: $el-w;
      height: $el-h;
      @content;
    }
  } 
  @else {
    @error "`#{$el}` is not a valid pseudo-element.";
  }
}


// BEM selectors
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}

@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

// Generate modifier color classes
//@mixin ui-colors($map, $p-el:null) {
//  @each $theme, $color in $map {
//    @include m($theme) {
//      background-color: $color;
//
//      // If an $p-el value is passed, generate pseudo-element bg colors. Used on progbars.
//      @if $p-el {
//        &:after {
//          background-color: lighten($color, 8%);
//        } 
//      }
//    }
//  }
//}

@mixin bg-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      background-color: $color;
    }
  }
}

//this is for font smoothing in osx and pc
@mixin font-smoothing($value: on) {
  @if $value == on {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

// Image replacement

@mixin img-replace($img, $w, $h, $disp: block) {
  background-image: url('#{$path--rel}/#{$img}');
  background-repeat: no-repeat;
  width: $w;
  height: $h;
  display: $disp;
}

//Truncate Text values are: clip, ellipsis, or a string
@mixin truncateText($overflow: ellipsis){
  overflow: hidden;
  white-space: nowrap;
  text-overflow: $overflow;
}

// Media queries

// Breakpoints
$brkpoint--sm    : 1px;
$brkpoint--md    : 768px;
$brkpoint--lg    : 1100px;

@mixin mq($break) {
  @if $break == "small" {
    @media (min-width: $brkpoint--sm) and (max-width: $brkpoint--md) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $brkpoint--md + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $brkpoint--lg) {
      @content;
    }
  }
  @else {
    @error "No value could be retrieved for `#{$break}`. "
      }
}

